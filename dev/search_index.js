var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ProjectSupervisor","category":"page"},{"location":"#ProjectSupervisor","page":"Home","title":"ProjectSupervisor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ProjectSupervisor.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ProjectSupervisor]","category":"page"},{"location":"#ProjectSupervisor.Supervisor","page":"Home","title":"ProjectSupervisor.Supervisor","text":"Supervisor\n\nKeeps an eye on your project. Storing metadata on what gets saved where.\n\n\n\n\n\n","category":"type"},{"location":"#ProjectSupervisor.fetch-Tuple{Supervisor}","page":"Home","title":"ProjectSupervisor.fetch","text":"fetch(sup::Supervisor; filter_criteria...)\n\nFetch a subset of the data stored in the metadata based  on some criteria to filter which entries to select.\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.generate_or_load-Tuple{Any, Supervisor, Vararg{Any}}","page":"Home","title":"ProjectSupervisor.generate_or_load","text":"generateorload(     fn,      sup::Supervisor,     paths_elements...;     name=nothing,     fmt=nothing,     kwargs...     )\n\nIf the file exists, load it. Otherwise, generate it using fn and save it.\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.get_gitrepo-Tuple{ObjectivePaths.Folder}","page":"Home","title":"ProjectSupervisor.get_gitrepo","text":"Find a folder that is a Git repo. Either the project or one of its parents.\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.get_savename-Tuple{Any, Any, Any, Vararg{Any}}","page":"Home","title":"ProjectSupervisor.get_savename","text":"getsavename(sup, name, fmt, pathselements...; )\n\nGet the path where some data will be saved.\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.git_info-Tuple{Supervisor}","page":"Home","title":"ProjectSupervisor.git_info","text":"Get info for current git repository (e.g. commit)\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.move_to_datadir-Tuple{Supervisor, String}","page":"Home","title":"ProjectSupervisor.move_to_datadir","text":"Move datadir to a subfolder\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.set_datadir-Tuple{Supervisor, String}","page":"Home","title":"ProjectSupervisor.set_datadir","text":"Move datadir to another folder.\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.store_data-Tuple{Supervisor, Vararg{Any}}","page":"Home","title":"ProjectSupervisor.store_data","text":"storedata(     sup::Supervisor,     data;     pathselements...;     name=nothing,     fmt=nothing,     kwargs... )\n\nStore some data in the supervisor's data folder.\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.store_data-Tuple{Supervisor}","page":"Home","title":"ProjectSupervisor.store_data","text":"store_data(     sup::Supervisor,     savename,     data;     metadata::AbstractDict = Dict(\"tag\"=>\"notag\"), )\n\nStore some data in the supervisor's data folder.\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.to_df-Tuple{AbstractDict}","page":"Home","title":"ProjectSupervisor.to_df","text":"Collate all metadata keys for all entries  and form a dataframe with all metadata\n\n\n\n\n\n","category":"method"},{"location":"#ProjectSupervisor.update_metadata!-Tuple{AbstractDict}","page":"Home","title":"ProjectSupervisor.update_metadata!","text":"update_metadata!(metadata::AbstractDict)::AbstractDict\n\nRemove obsolete entries pointing to files that no longer exist.\n\n\n\n\n\n","category":"method"}]
}
